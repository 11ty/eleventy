export default TemplateRender;
declare class TemplateRender {
    static parseEngineOverrides(engineName: any): string[];
    constructor(tmplPath: any, config: any);
    eleventyConfig: any;
    set config(config: any);
    get config(): any;
    engineNameOrPath: any;
    parseMarkdownWith: any;
    parseHtmlWith: any;
    get dirs(): any;
    get inputDir(): any;
    get includesDir(): any;
    getIncludesDir(): any;
    _config: any;
    set extensionMap(extensionMap: any);
    get extensionMap(): any;
    _extensionMap: any;
    getEngineByName(name: any): Promise<any>;
    init(engineNameOrPath: any): Promise<void>;
    _engineName: any;
    _engine: any;
    get engineName(): any;
    get engine(): any;
    getReadableEnginesList(): any;
    getReadableEnginesListDifferingFromFileExtension(): any;
    getPreprocessorEngine(): any;
    getEnginesList(engineOverride: any): any;
    setEngineOverride(engineName: any, bypassMarkdown: any): Promise<void>;
    getEngineName(): any;
    isEngine(engine: any): boolean;
    setUseMarkdown(useMarkdown: any): void;
    useMarkdown: boolean | undefined;
    setMarkdownEngine(markdownEngine: any): void;
    setHtmlEngine(htmlEngineName: any): void;
    _testRender(str: any, data: any): Promise<any>;
    getCompiledTemplate(str: any): Promise<any>;
}
